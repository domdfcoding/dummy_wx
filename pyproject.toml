[build-system]
requires = [ "setuptools!=61.*,<=67.1.0,>=40.6.0", "wheel>=0.34.2",]
build-backend = "setuptools.build_meta"

[project]
name = "dummy_wx"
version = "0.3.0"
description = "This module does nothing."
readme = "README.rst"
requires-python = ">=3.7"
keywords = [ "sphinx", "wxpython",]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Utilities",
]
dynamic = [ "dependencies",]

[project.license]
file = "LICENSE"

[[project.authors]]
name = "Dominic Davis-Foster"
email = "dominic@davis-foster.co.uk"

[project.urls]
Homepage = "https://github.com/domdfcoding/dummy_wx"
"Issue Tracker" = "https://github.com/domdfcoding/dummy_wx/issues"
"Source Code" = "https://github.com/domdfcoding/dummy_wx"

[tool.importcheck]

[tool.setuptools]
zip-safe = false
include-package-data = true
platforms = [ "Windows", "macOS", "Linux",]

[tool.whey]
base-classifiers = [ "Intended Audience :: Developers", "Operating System :: OS Independent", "Topic :: Utilities",]
python-versions = [ "3.7", "3.8",]
python-implementations = [ "CPython",]
platforms = [ "Windows", "macOS", "Linux",]
license-key = "LGPL-3.0-or-later"
package = "wx"
additional-files = [
    "recursive-include wx/py *.txt",
    "recursive-include wx/lib *.txt",
    "recursive-include wx/lib *.md",
    "recursive-include wx/lib *.idl",
    "recursive-include wx/lib *.tlb",
    "recursive-include wx/lib *.html",
    "recursive-include wx/lib *.py",
]

[tool.mypy]
python_version = "3.8"
namespace_packages = true
check_untyped_defs = true
warn_unused_ignores = true
no_implicit_optional = true
show_error_codes = true

[tool.dependency-dash."requirements.txt"]
order = 10

[tool.snippet-fmt]
directives = [ "code-block",]

[tool.snippet-fmt.languages.python]
reformat = true

[tool.snippet-fmt.languages.TOML]
reformat = true

[tool.snippet-fmt.languages.ini]

[tool.snippet-fmt.languages.json]
